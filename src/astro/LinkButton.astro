---
interface Props {
  text: string;
  href: string;
  icon?: string;
  external?: boolean;
}

const { text, href, external } = Astro.props;
---

{
  external ? (
    <a class="post-link" href={href} target="_blank">
      {text}
      <img
        src="/externalLinkIcon.svg"
        alt="Opens in new tab"
        width="15"
        height="15"
      />
    </a>
  ) : (
    <a class="post-link" href={href}>
      {text}
      <div class="arrow">
        <img src="/rightArrowIcon.svg" alt="Opens in the same tab" />
      </div>
    </a>
  )
}

<style lang="scss">
  .post-link {
    display: flex;
    gap: 6px;
    align-items: center;
    width: fit-content;
    padding: var(--link-padding);
    border-radius: var(--border-radius-bg);
    background-color: #fafafa;
    background-image: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0.3)
    );
    box-shadow:
      rgba(255, 255, 255, 0.8) 0 1px 0 inset,
      rgba(0, 0, 0, 0.05) 0 1px 1px;
    box-sizing: border-box;
    transition: all 0.15s ease-in-out;

    &:hover {
      background-color: #f0f0f0;
      border-color: #e8e8e8;
      background-image: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0.9),
        rgba(235, 255, 255, 0.3)
      );
    }

    &:hover .arrow {
      transform: translateX(4px);
      margin-right: 4px;
    }
  }

  .arrow {
    display: flex;
    z-index: 1;
    transition: all 0.15s ease-in-out;
  }
</style>
